name: Deploy to ECS using CodeDeploy

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: shunnualisha8980/strapi-app
  AWS_REGION: us-east-1
  ECS_CLUSTER: strapi-cluster
  ECS_SERVICE: strapi-service
  TASK_DEF: strapi-task1
  CODEDEPLOY_APP: strapi-codedeploy
  CODEDEPLOY_GROUP: strapi-deployment-group

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image to Docker Hub
        working-directory: my-strapi-app
        run: |
          docker build -t $DOCKER_IMAGE:${{ github.sha }} .
          docker push $DOCKER_IMAGE:${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download current task definition
        id: task-def
        run: |
          aws ecs describe-task-definition \
            --task-definition $TASK_DEF \
            --query 'taskDefinition' > task-definition.json

      - name: Update task definition with new image
        id: updated-task
        run: |
          IMAGE="$DOCKER_IMAGE:${{ github.sha }}"
          jq --arg IMAGE "$IMAGE" '.containerDefinitions[0].image = $IMAGE' task-definition.json > new-task-def.json

      - name: Register new task definition
        id: register-task
        run: |
          arn=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "task_definition_arn=$arn" >> $GITHUB_ENV

      - name: Trigger CodeDeploy deployment
        run: |
          aws deploy create-deployment \
            --application-name $CODEDEPLOY_APP \
            --deployment-group-name $CODEDEPLOY_GROUP \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --description "GitHub Actions deployment" \
            --task-definition ${{ env.task_definition_arn }}
